#!/bin/bash

function gen {

  # Eliminar cualquier entidad que ya exista
  rm -rf $OASGEN_PATH/entities/*
  rm -rf $PWD/srcgen

  # Copiar la entidad a la carpeta de entidades
  cp $PWD/$1 $OASGEN_PATH/entities

  # Borrar el codigo que se haya generado antes
  docker exec -it oasgen bash -c "rm -rf /tool/srcgen/*"

  # Hacer la llamada a Docker para genere el codigo
  docker exec -it oasgen bash -c "python /tool/entity_codegen.py $1"

  # Copiar los resultados de regreso a la carpeta donde los necesita
  cp -r $OASGEN_PATH/srcgen $PWD
}

ent_file=$2

if [ -z "$1" ]; then
  echo "Ingrese alguna opcion"
  echo "oasgen init : Generar un proyecto"
  echo "oasgen generate : Generar CRUD basado en archivo .ent"
else
  # Verificar que el contenedor este corriendo
  docker_running=`docker ps -q -f name=^/oasgen$`
  if [ -z "$docker_running" ]; then
    echo "El contenedor del generador no esta corriendo ejecute el script de bootstrap primero"
  else
    if [ "$1" == "init" ]; then
      if [ -z "$2" ]; then
        echo "Ingrese un nombre para la aplicacion"
        echo "oasgen init <nombre aplicacion>"
      else
        echo "Inicializando proyecto ..."
        git clone https://github.com/bizoru/mongo-beego-angular.git $2
      fi
    fi
    if [ "$1" == "generate" ]; then
      gen $ent_file
      cp -rv $PWD/srcgen/backend/* $PWD/../beego/code
      cp -rv $PWD/srcgen/frontend/* $PWD/../angular4/code/src/app
      rm -rf $PWD/srcgen
    fi
  fi
fi
